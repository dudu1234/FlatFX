@model FlatFXWebClient.ViewModels.OrderViewModel
@using FlatFXCore.BussinessLayer;
@using FlatFXCore.Model.Data;

@{
    string orderId = (Model.order != null) ? Model.order.OrderId.ToString() : "";
    Deal deal = TempData["Deal"] as Deal;
}

<div class="start-align">
    <div>
        <span class="text-danger">@TempData["ErrorResult"]</span>
    </div>

    <h4>@FlatFXResources.Resources.ConfirmationNumber: @orderId</h4>

    @if (TempData["ErrorResult"] == null || TempData["ErrorResult"] == "")
    {
        if (Model.IsEdit)
        {
            <h3 class="green">@FlatFXResources.Resources.OrderUpdateSuccessfully.</h3>
            <h4>@FlatFXResources.Resources.OrderSummaryDetails</h4>
        }
        else if (Model.MatchOrderId > 0)
        {
            <h3 class="green">@FlatFXResources.Resources.OrderMatchSuccessfully.</h3>
            <h4>@FlatFXResources.Resources.MatchDealId @deal.DealId</h4>
            <h4>@FlatFXResources.Resources.MatchSummaryDetails</h4>
            <br />
            <h3>@FlatFXResources.Resources.MoneyTransferInstractions:</h3>
            <div>
                <b>@FlatFXResources.Resources.TheFunds @DateTime.Now.AddDays(1).ToShortDateString() @FlatFXResources.Resources.At 13:00.</b><br />
                @FlatFXResources.Resources.PleaseTransfer @deal.AmountToExchangeChargedCurrency.ToString("N0") @deal.ChargedCurrency @FlatFXResources.Resources.FromYourBankAccount @deal.ChargedProviderAccount.Provider.FullName @deal.ChargedProviderAccount.AccountName<br />
                @FlatFXResources.Resources.ASAP @deal.OfferingDate.AddDays(1).ToShortDateString() 13:00.<br />
                @FlatFXResources.Resources.OnceTheMoney @deal.AmountToExchangeCreditedCurrency.ToString("N0") @deal.CreditedCurrency @FlatFXResources.Resources.backtoyouraccount.<br />
                <br />
                @Html.Raw(@FlatFXResources.Resources.HowToTransfer) <a href="@Url.Action("Index", "Home")">@FlatFXResources.Resources.Here</a>.<br />
            </div>
            @Html.Raw(@FlatFXResources.Resources.FlatFXBankAccountDetails)

        }
        else
        {
            <h3 class="green">@FlatFXResources.Resources.OrderCreatedSuccessfully.</h3>
            <h4>@FlatFXResources.Resources.OrderSummaryDetails</h4>
        }
    }
    else
    {
        <h3 class="red">@FlatFXResources.Resources.FailedToCreateOrder.</h3>
        <h4 class="red">@FlatFXResources.Resources.PleaseContactSupport.</h4>
    }


    <br /><br />
    @FlatFXResources.Resources.OrderSummary1 <a href="@Url.Action("Index", "Home")">@FlatFXResources.Resources.Here</a>
    <br /><br />
    <div class="form-group">
        <div class="col-md-12">
            <div class="btn-group">
                <a class="btn btn-success" href="@Url.Action("OrderBookIndex", "OrderBook")">@FlatFXResources.Resources.OrderBook</a>
                <a class="btn btn-danger" href="@Url.Action("Index", "Home")">@FlatFXResources.Resources.Home</a>
                <a class="btn btn-success" href="@Url.Action("DashboardIndex", "Dashboard")">@FlatFXResources.Resources.OpenDeals</a>
                <a class="btn btn-danger" href="@Url.Action("DashboardIndex", "Dashboard", new { TabName = "DealHistory" })">@FlatFXResources.Resources.DealHistory</a>
                <a class="btn btn-success" href="@Url.Action("OrderData", "Order", new { mode = "OpenOrders" })">@FlatFXResources.Resources.OpenOrders</a>
                <a class="btn btn-danger" href="@Url.Action("OrderData", "Order", new { mode = "OrderHistory" })">@FlatFXResources.Resources.OrderHistory</a>
                <a class="btn btn-success" href="@Url.Action("DashboardIndex", "Dashboard", new { TabName = "Statistics" })">@FlatFXResources.Resources.Statistics</a>
            </div>
        </div>
    </div>
    <br /><br />
</div>
