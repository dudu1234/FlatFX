@model FlatFXWebClient.ViewModels.OrderViewModel
@using FlatFXCore.BussinessLayer;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool officeHoursOn = true; //To Do add logic in Application Information (function parameter user/account)
}

<div class="order-system-wrapper">
    <div class="col-xs-12 order-system-header">
        <span class="glyphicon glyphicon-resize-small order-system-icon"></span> ExchangeP2P System
    </div>
    <div class="col-xs-12 order-navigation">
        <div class="col-xs-12 btn-group">
            <a class="btn btn-lg btn-primary" href="@Url.Action("OrderBookIndex", "OrderBook")">@FlatFXResources.Resources.OrderBook</a>
            <a class="btn btn-lg btn-danger" href="@Url.Action("CreateOrderIndex", "Order")">@FlatFXResources.Resources.CreateNewOrder2</a>
            <a class="btn btn-lg btn-primary" href="@Url.Action("OrderData", "Order", new { mode = "OpenOrders" })">@FlatFXResources.Resources.OpenOrders</a>
            <a class="btn btn-lg btn-danger" href="@Url.Action("OrderData", "Order", new { mode = "OrderHistory" })">@FlatFXResources.Resources.OrderHistory</a>
        </div>
    </div>
    @if (ApplicationInformation.Instance.IsDemoUser)
    {
        <div class="col-xs-12 demoToLiveTrading">
            <span class="demo-to-real-label">@FlatFXResources.Resources.DemoEnvAlert</span>
            <a class="btn btn-success demo-to-real-button" href="@Url.Action("ConvertDemoToRealAccount", "Account")">@FlatFXResources.Resources.DemoEnvButtonTxt</a>
        </div>
    }

    <div ng-controller="OrderLayout" ng-init="init('@Html.Raw(ApplicationInformation.Instance.IsDemoUser)')" class="order-currency-exchange-main">
        
        @if (!officeHoursOn)
        {
            @Html.Raw(FlatFXResources.Resources.TradingHours)
        }

        @if (officeHoursOn)
        {
            <div>
                @RenderBody()
            </div>
        }
    </div>
</div>