@model FlatFXWebClient.ViewModels.RegisterCompanyEntitiesModelView
@{
    ViewBag.Title = "Register";
}

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="col-xs-1"></div>
    <div class="col-xs-3 panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title">@FlatFXResources.Resources.CreateNewUser</h3>
        </div>
        <div class="panel-body">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary("", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.UserVM.UserName, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.UserVM.UserName) })
            @Html.TextBoxFor(m => m.UserVM.Password, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.UserVM.Password) })
            @Html.TextBoxFor(m => m.UserVM.ConfirmPassword, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.UserVM.ConfirmPassword) })
            @Html.TextBoxFor(m => m.UserVM.FirstName, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.UserVM.FirstName) })
            @Html.TextBoxFor(m => m.UserVM.LastName, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.UserVM.LastName) })
            @Html.TextBoxFor(m => m.UserVM.Role, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.UserVM.Role) })
            
            <div class="panel panel-info">
                <div class="panel-heading">
                    <h4 class="panel-title">@FlatFXResources.Resources.ContactDetails</h4>
                </div>
                <div class="panel-body">
                    @Html.TextBoxFor(m => m.UserVM.contactDetails.Email, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.UserVM.contactDetails.Email) })
                    @Html.TextBoxFor(m => m.UserVM.contactDetails.MobilePhone, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.UserVM.contactDetails.MobilePhone) })
                    @Html.TextBoxFor(m => m.UserVM.contactDetails.OfficePhone, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.UserVM.contactDetails.OfficePhone) })
                    @Html.TextBoxFor(m => m.UserVM.contactDetails.Fax, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.UserVM.contactDetails.Fax) })
                    @Html.TextBoxFor(m => m.UserVM.contactDetails.Country, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.UserVM.contactDetails.Country) })
                    @Html.TextBoxFor(m => m.UserVM.contactDetails.WebSite, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.UserVM.contactDetails.WebSite) })
                </div>
            </div>
            
            <input type="submit" class="btn btn-default" value="@FlatFXResources.Resources.Register" />
        </div>
    </div>
    <div class="col-xs-1"></div>
    <div class="col-xs-3 panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title">@FlatFXResources.Resources.CreateNewCompany</h3>
        </div>
        <div class="panel-body">
            @Html.ValidationSummary("", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.companyVM.CompanyShortName, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.CompanyShortName) })
            @Html.TextBoxFor(m => m.companyVM.CompanyFullName, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.CompanyFullName) })
            @Html.TextBoxFor(m => m.companyVM.CustomerType, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.CustomerType) })
            @Html.TextBoxFor(m => m.companyVM.ValidIP, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.ValidIP) })
            @Html.TextBoxFor(m => m.companyVM.IsDepositValid, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.IsDepositValid) })
            @Html.TextBoxFor(m => m.companyVM.IsSignOnRegistrationAgreement, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.IsSignOnRegistrationAgreement) })

            <div class="panel panel-info">
                <div class="panel-heading">
                    <h4 class="panel-title">@FlatFXResources.Resources.ContactDetails</h4>
                </div>
                <div class="panel-body">
                    @Html.TextBoxFor(m => m.companyVM.contactDetails.Email, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.contactDetails.Email) })
                    @Html.TextBoxFor(m => m.companyVM.contactDetails.MobilePhone, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.contactDetails.MobilePhone) })
                    @Html.TextBoxFor(m => m.companyVM.contactDetails.OfficePhone, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.contactDetails.OfficePhone) })
                    @Html.TextBoxFor(m => m.companyVM.contactDetails.Fax, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.contactDetails.Fax) })
                    @Html.TextBoxFor(m => m.companyVM.contactDetails.Country, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.contactDetails.Country) })
                    @Html.TextBoxFor(m => m.companyVM.contactDetails.WebSite, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.contactDetails.WebSite) })

                    @Html.TextBoxFor(m => m.companyVM.contactDetailsEx.Address, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.contactDetailsEx.Address) })
                    @Html.TextBoxFor(m => m.companyVM.contactDetailsEx.Email2, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.contactDetailsEx.Email2) })
                    @Html.TextBoxFor(m => m.companyVM.contactDetailsEx.MobilePhone2, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.contactDetailsEx.MobilePhone2) })
                    @Html.TextBoxFor(m => m.companyVM.contactDetailsEx.OfficePhone2, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.contactDetailsEx.OfficePhone2) })
                    @Html.TextBoxFor(m => m.companyVM.contactDetailsEx.HomePhone, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.contactDetailsEx.HomePhone) })
                    @Html.TextBoxFor(m => m.companyVM.contactDetailsEx.CarPhone, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.contactDetailsEx.CarPhone) })
                </div>
            </div>
        </div>
    </div>
    <div class="col-xs-1"></div>
    <div class="col-xs-2 panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title">@FlatFXResources.Resources.CreateNewAccount</h3>
        </div>
        <div class="panel-body">
            @Html.ValidationSummary("", new { @class = "text-danger" })
            @Html.TextBoxFor(m => m.companyAccountVM.AccountName, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyAccountVM.AccountName) })
            @Html.TextBoxFor(m => m.companyAccountVM.AccountFullName, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyAccountVM.AccountFullName) })
            @Html.TextBoxFor(m => m.companyAccountVM.IsDefaultAccount, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyAccountVM.IsDefaultAccount) })
        </div>
    </div>
    <div class="col-xs-1"></div>
}


