@using FlatFXWebClient.ViewModels
@model FlatFXWebClient.ViewModels.CompanyUserAllEntitiesModelView
<div class="panel panel-info">
    <div class="panel-heading">
        <h4 class="panel-title">@FlatFXResources.Resources.ContactDetails</h4>
    </div>
    <div class="panel-body">
        @if (Model.ShowContactDetailsForUser)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.UserVM.userContactDetails.MobilePhone, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.UserVM.userContactDetails.MobilePhone, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.UserVM.userContactDetails.MobilePhone) })
                    @Html.ValidationMessageFor(m => m.UserVM.userContactDetails.MobilePhone, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(m => m.UserVM.userContactDetails.Country, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.EnumDropDownListFor(m => m.UserVM.userContactDetails.Country, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.UserVM.userContactDetails.OfficePhone, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.UserVM.userContactDetails.OfficePhone, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.UserVM.userContactDetails.OfficePhone) })
                    @Html.ValidationMessageFor(m => m.UserVM.userContactDetails.OfficePhone, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(m => m.UserVM.userContactDetails.Fax, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.UserVM.userContactDetails.Fax, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.UserVM.userContactDetails.Fax) })
                    @Html.ValidationMessageFor(m => m.UserVM.userContactDetails.Fax, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(m => m.UserVM.userContactDetails.Email, htmlAttributes: new { @class = "control-label col-sm-2 required" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.companyVM.companyContactDetails.Email, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.companyContactDetails.Email) })
                    @Html.ValidationMessageFor(m => m.companyVM.companyContactDetails.Email, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(m => m.UserVM.userContactDetails.MobilePhone, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.companyVM.companyContactDetails.MobilePhone, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.companyContactDetails.MobilePhone) })
                    @Html.ValidationMessageFor(m => m.companyVM.companyContactDetails.MobilePhone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.UserVM.userContactDetails.OfficePhone, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.companyVM.companyContactDetails.OfficePhone, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.companyContactDetails.OfficePhone) })
                    @Html.ValidationMessageFor(m => m.companyVM.companyContactDetails.OfficePhone, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(m => m.UserVM.userContactDetails.Fax, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.companyVM.companyContactDetails.Fax, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.companyContactDetails.Fax) })
                    @Html.ValidationMessageFor(m => m.companyVM.companyContactDetails.Fax, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.UserVM.userContactDetails.Country, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.EnumDropDownListFor(m => m.companyVM.companyContactDetails.Country, htmlAttributes: new { @class = "form-control" })
                </div>
                @Html.LabelFor(m => m.UserVM.userContactDetails.WebSite, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.companyVM.companyContactDetails.WebSite, new { @class = "form-control", @placeholder = Html.DisplayNameFor(x => x.companyVM.companyContactDetails.WebSite) })
                    @Html.ValidationMessageFor(m => m.companyVM.companyContactDetails.WebSite, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.Partial("RegisterContactDetailsEx", Model)
        }
    </div>
</div>
