@model FlatFXCore.Model.Data.ProviderAccount

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Manage/AdminManageLayout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-horizontal">
            <div class="form-horizontal">
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <h3 class="panel-title">Provider Account</h3>
                    </div>
                    <div class="panel-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.CompanyAccountId)

                        @Html.HiddenFor(model => model.ProviderId)

                        <div class="form-group">
                            @Html.LabelFor(model => model.AccountName, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.AccountName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AccountName, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.BankAccountName, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.BankAccountName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BankAccountName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BankBranchNumber, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.BankBranchNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BankBranchNumber, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.BankAccountNumber, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.BankAccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BankAccountNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BankAddress, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.BankAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BankAddress, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.IBAN, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.IBAN, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IBAN, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SWIFT, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.SWIFT, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SWIFT, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.AllowToTradeDirectlly, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.AllowToTradeDirectlly)
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ApprovedBYFlatFX, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.ApprovedBYFlatFX)
                                </div>
                            </div>

                            @Html.LabelFor(model => model.ApprovedBYProvider, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.ApprovedBYProvider)
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserKeyInProviderSystems, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.UserKeyInProviderSystems, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserKeyInProviderSystems, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsActive)
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IsDemoAccount, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsDemoAccount)
                                </div>
                            </div>

                            @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastUpdate, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.LastUpdate, new { htmlAttributes = new { @class = "form-control" } })
                            </div>

                            @Html.LabelFor(model => model.LastUpdateBy, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.LastUpdateBy, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.QuoteResponse_IsBlocked, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.QuoteResponse_IsBlocked)
                                </div>
                            </div>

                            @Html.LabelFor(model => model.QuoteResponse_CustomerPromil, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.EditorFor(model => model.QuoteResponse_CustomerPromil, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.QuoteResponse_CustomerPromil, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-sm-offset-2 col-sm-4">
                                <input type="submit" value="Save" class="btn btn-info" />
                            </div>
                        </div>
                        <div>
                            <a class="btn btn-success" href="@Url.Action("Index")">Back to List</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

