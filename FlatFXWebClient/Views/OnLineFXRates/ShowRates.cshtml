@{
    ViewBag.Title = "ShowRates";
}

@using FlatFXCore.BussinessLayer;

<div class="row" style="background-color: #dae4e4">
    <div class="col-sm-4 col-sm-offset-4">
        <div class="form-horizontal">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">@FlatFXResources.Resources.CurrencyExchangeRateIndication</h3>
                </div>
                <div id="onLineRates" class="panel-body table-responsive">
                    <table class="table table-bordered table-hover table-striped ffx-table">
                        <colgroup>
                            <col class="col-sm-6" />
                            <col class="col-sm-2" />
                            <col class="col-sm-2" />
                            <col class="col-sm-2" />
                        </colgroup>
                        <thead>
                            <tr>
                                <th data-field="pair">@FlatFXResources.Resources.Pair</th>
                                <th data-field="mid">@FlatFXResources.Resources.MidRate</th>
                                <th data-field="bid">@FlatFXResources.Resources.Buy</th>
                                <th data-field="ask">@FlatFXResources.Resources.Sell</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                foreach (string pairKey in CurrencyManager.Instance.PairList.Keys)
                                {
                                    <tr>
                                        <td>@CurrencyManager.Instance.PairList[pairKey]</td>
                                        <td id="@(pairKey + "-MID")"></td>
                                        <td id="@(pairKey + "-BID")"></td>
                                        <td id="@(pairKey + "-ASK")"></td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div id="on-line-rates-remarks">
            <p>@FlatFXResources.Resources.ShowRateRemarksRow1 <a style="color: blue; text-decoration: underline;" href="http://finance.yahoo.com/currency-investing" target="_blank">Yahoo Finance</a></p>
            <p>@FlatFXResources.Resources.ShowRateRemarksRow2 <span id="last-feed-update"></span></p>
            <p>@FlatFXResources.Resources.ShowRateRemarksRow3</p>
            <p>@FlatFXResources.Resources.ShowRateRemarksRow4</p>
            <p>@FlatFXResources.Resources.ShowRateRemarksRow5</p>
        </div>
        <script>
            var GetFeedRatesUrl = '@(Url.Action("GetRates", "OnLineFXRates"))';

            function refreshYahooDataFeed() {
                $.getJSON(GetFeedRatesUrl)
                    .done(function (data) {

                        try {
                            $("#last-feed-update").html(data.query.results.rate[0].Date + '&nbsp;' + data.query.results.rate[0].Time);
                            $.each(data.query.results.rate, function () {
                                updateCurrencyRow(this);
                            });
                        }
                        catch (err) {
                            alert(err);
                        }
                    });
            };

            function updateCurrencyRow(currencyRow) {
                var mid = (parseFloat(currencyRow.Bid) + parseFloat(currencyRow.Ask)) / 2;
                var spread = mid * 0.003;
                $("#" + currencyRow.id + "-MID").text(mid.toFixed(4));
                $("#" + currencyRow.id + "-BID").text((mid - spread).toFixed(4));
                $("#" + currencyRow.id + "-ASK").text((mid + spread).toFixed(4));
            }

            $(document).ready(function () {
                refreshYahooDataFeed();
                setInterval(function () { refreshYahooDataFeed() }, 5 * 60000);
            });
        </script>
    </div>
</div>