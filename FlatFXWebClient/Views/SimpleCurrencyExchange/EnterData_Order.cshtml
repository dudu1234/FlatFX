@model FlatFXWebClient.ViewModels.SimpleCurrencyExchangeViewModel
@using FlatFXCore.BussinessLayer;

<h1 class="simple-trade-header">Enter your Order</h1>
<br /><br />

@Html.HiddenFor(model => model.InvalidAccountReason)

@if (Model.InvalidAccountReason != null && Model.InvalidAccountReason.Count > 0)
{
    <div class="start-align">
        <h2>You are not allowed to perform the currency exchange:</h2>
        @foreach (string reason in Model.InvalidAccountReason)
        {
            <h3>- @reason</h3>
        }
    </div>
    <br /><br /><br /><br /><br /><br />
}
else
{   
    <div class="form-group">
        <label class="control-label col-md-4">I wish to</label>
        <div class="col-md-2">
            @Html.RadioButtonFor(model => model.BuySell, "Buy", new { @checked = "checked" }) Buy
        </div>
        <div class="col-md-2">
            @Html.RadioButtonFor(model => model.BuySell, "Sell") Sell
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-4">Amount</label>
        <div class="col-md-4">
            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="col-md-3">
            @Html.DropDownListFor(m => m.CCY1, new SelectList(Model.CurrencyList), htmlAttributes: new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-4">Sell</label>
        <div class="col-md-4">

        </div>
        <div class="col-md-3">
            @Html.DropDownListFor(m => m.CCY2, new SelectList(Model.CurrencyList), htmlAttributes: new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SelectedAccount, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.SelectedAccount, Model.UserBankAccounts, htmlAttributes: new { @readonly = "readonly", @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.TextAreaFor(model => model.Comment, 4, 50, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        <div class="start-align col-md-10">
            @if (ApplicationInformation.Instance.IsDemoUser)
            {
                <input type="submit" value="Submit your DEMO Order" class="btn btn-primary btn-lg" />
            }
            else
            {
                <input type="submit" value="Submit your Order" class="btn btn-primary btn-lg" />
                <br />
                <remark>The funds must received by FlatFX on @DateTime.Now.AddDays(1).ToShortDateString() at 13:00</remark>
            }
        </div>
    </div>
    <br />
    <br />
}
